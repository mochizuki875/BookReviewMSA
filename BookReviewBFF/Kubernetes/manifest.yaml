apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: bookreview
  name: bookreview-bff
spec:
  replicas: 1
  selector:
    matchLabels:
      app: bookreview-bff
  template:
    metadata:
      labels:
        app: bookreview-bff
    spec:
      containers:
      - image: ghcr.io/mochizuki875/bookreview:otel
        name: bookreview-bff
        imagePullPolicy: Always
        env:
        - name: buildEnv
          value: prod
        - name: SERVER_PORT
          value: 8080
        - name: BOOK_API_URL
          value: http://book-api/api/book
        - name: REVIEW_API_URL
          value: http://review-api/api/review
        - name: OTEL_SERVICE_NAME
          value: BookReview-bff
        - name: OTEL_TRACES_EXPORTER
          value: otlp
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: http://grafana-agent-traces.monitoring.svc:4317
        - name: OTEL_RESOURCE_ATTRIBUTES_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: OTEL_RESOURCE_ATTRIBUTES_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: OTEL_RESOURCE_ATTRIBUTES_POD_UID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: OTEL_RESOURCE_ATTRIBUTES_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: OTEL_RESOURCE_ATTRIBUTES_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "k8s.namespace.name=$(OTEL_RESOURCE_ATTRIBUTES_NAMESPACE), k8s.pod.name=$(OTEL_RESOURCE_ATTRIBUTES_POD_NAME), k8s.pod.uid=$(OTEL_RESOURCE_ATTRIBUTES_POD_UID), k8s.pod.ip=$(OTEL_RESOURCE_ATTRIBUTES_POD_IP), k8s.node.name=$(OTEL_RESOURCE_ATTRIBUTES_NODE_NAME)"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: bookreview
  name: bookreview-bff
spec:
  selector:
    app: bookreview-bff
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: book-bff-ingress
spec:
  ingressClassName: nginx
  rules:
  - host: bookreview.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: bookreview
            port:
              number: 8080